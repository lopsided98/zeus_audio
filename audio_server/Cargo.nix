# Generated by carnix 0.10.0: carnix generate-nix --src ./.
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
rec {
  crates = cratesIO // rec {
# alsa-0.4.1

    crates.alsa."0.4.1" = deps: { features?(features_.alsa."0.4.1" deps {}) }: buildRustCrate {
      crateName = "alsa";
      version = "0.4.1";
      description = "Thin but safe wrappers for ALSA (Linux sound API)";
      authors = [ "David Henningsson <diwic@ubuntu.com>" ];
      edition = "2018";
      src = fetchgit {
         url = "https://github.com/lopsided98/alsa-rs";
         rev = "c2890f5cf0bfeff0c3c188cdcf8ab5b103634bc1";
         sha256 = "14712g5ydrlna462h3p41v1phc2b2k97a78xcpm39jnqkq6s6943";
         fetchSubmodules = false;
      };
      dependencies = mapFeatures features ([
        (crates."alsa_sys"."${deps."alsa"."0.4.1"."alsa_sys"}" deps)
        (cratesIO.crates."bitflags"."${deps."alsa"."0.4.1"."bitflags"}" deps)
        (cratesIO.crates."libc"."${deps."alsa"."0.4.1"."libc"}" deps)
        (cratesIO.crates."nix"."${deps."alsa"."0.4.1"."nix"}" deps)
      ]);
    };
    features_.alsa."0.4.1" = deps: f: updateFeatures f (rec {
      alsa."0.4.1".default = (f.alsa."0.4.1".default or true);
      alsa_sys."${deps.alsa."0.4.1".alsa_sys}".default = true;
      bitflags."${deps.alsa."0.4.1".bitflags}".default = true;
      libc."${deps.alsa."0.4.1".libc}".default = true;
      nix."${deps.alsa."0.4.1".nix}".default = true;
    }) [
      (features_.alsa_sys."${deps."alsa"."0.4.1"."alsa_sys"}" deps)
      (cratesIO.features_.bitflags."${deps."alsa"."0.4.1"."bitflags"}" deps)
      (cratesIO.features_.libc."${deps."alsa"."0.4.1"."libc"}" deps)
      (cratesIO.features_.nix."${deps."alsa"."0.4.1"."nix"}" deps)
    ];


# end
# alsa-sys-0.2.0

    crates.alsa_sys."0.2.0" = deps: { features?(features_.alsa_sys."0.2.0" deps {}) }: buildRustCrate {
      crateName = "alsa-sys";
      version = "0.2.0";
      description = "FFI bindings for the ALSA project (Advanced Linux Sound Architecture)";
      authors = [ "Pierre Krieger <pierre.krieger1708@gmail.com>" "David Henningsson <diwic@ubuntu.com>" ];
      edition = "2018";
      src = fetchgit {
         url = "https://github.com/lopsided98/alsa-sys.git";
         rev = "7f7840651544dbc515d49182d3ce386798e262c4";
         sha256 = "058k14qvr1klmm4qvfawzfncppi478jvslifzk39hildwg9pgn7z";
         fetchSubmodules = false;
      };
      build = "build.rs";
      dependencies = mapFeatures features ([
        (cratesIO.crates."libc"."${deps."alsa_sys"."0.2.0"."libc"}" deps)
      ]);

      buildDependencies = mapFeatures features ([
        (cratesIO.crates."pkg_config"."${deps."alsa_sys"."0.2.0"."pkg_config"}" deps)
      ]);
    };
    features_.alsa_sys."0.2.0" = deps: f: updateFeatures f (rec {
      alsa_sys."0.2.0".default = (f.alsa_sys."0.2.0".default or true);
      libc."${deps.alsa_sys."0.2.0".libc}".default = true;
      pkg_config."${deps.alsa_sys."0.2.0".pkg_config}".default = true;
    }) [
      (cratesIO.features_.libc."${deps."alsa_sys"."0.2.0"."libc"}" deps)
      (cratesIO.features_.pkg_config."${deps."alsa_sys"."0.2.0"."pkg_config"}" deps)
    ];


# end
# audio_server-0.4.0

    crates.audio_server."0.4.0" = deps: { features?(features_.audio_server."0.4.0" deps {}) }: buildRustCrate {
      crateName = "audio_server";
      version = "0.4.0";
      authors = [ "Ben Wolsieffer <benwolsieffer@gmail.com>" ];
      edition = "2018";
      src = exclude [ ".git" "target" ] ./.;
      dependencies = mapFeatures features ([
        (crates."alsa"."${deps."audio_server"."0.4.0"."alsa"}" deps)
        (cratesIO.crates."env_logger"."${deps."audio_server"."0.4.0"."env_logger"}" deps)
        (cratesIO.crates."failure"."${deps."audio_server"."0.4.0"."failure"}" deps)
        (cratesIO.crates."failure_derive"."${deps."audio_server"."0.4.0"."failure_derive"}" deps)
        (cratesIO.crates."futures"."${deps."audio_server"."0.4.0"."futures"}" deps)
        (cratesIO.crates."hostname"."${deps."audio_server"."0.4.0"."hostname"}" deps)
        (cratesIO.crates."hound"."${deps."audio_server"."0.4.0"."hound"}" deps)
        (cratesIO.crates."libc"."${deps."audio_server"."0.4.0"."libc"}" deps)
        (cratesIO.crates."log"."${deps."audio_server"."0.4.0"."log"}" deps)
        (cratesIO.crates."mio"."${deps."audio_server"."0.4.0"."mio"}" deps)
        (cratesIO.crates."nix"."${deps."audio_server"."0.4.0"."nix"}" deps)
        (cratesIO.crates."pin_utils"."${deps."audio_server"."0.4.0"."pin_utils"}" deps)
        (cratesIO.crates."prost"."${deps."audio_server"."0.4.0"."prost"}" deps)
        (cratesIO.crates."prost_types"."${deps."audio_server"."0.4.0"."prost_types"}" deps)
        (cratesIO.crates."regex"."${deps."audio_server"."0.4.0"."regex"}" deps)
        (cratesIO.crates."serde"."${deps."audio_server"."0.4.0"."serde"}" deps)
        (cratesIO.crates."serde_derive"."${deps."audio_server"."0.4.0"."serde_derive"}" deps)
        (cratesIO.crates."serde_yaml"."${deps."audio_server"."0.4.0"."serde_yaml"}" deps)
        (cratesIO.crates."tokio"."${deps."audio_server"."0.4.0"."tokio"}" deps)
        (cratesIO.crates."tonic"."${deps."audio_server"."0.4.0"."tonic"}" deps)
      ]);

      buildDependencies = mapFeatures features ([
        (cratesIO.crates."tonic_build"."${deps."audio_server"."0.4.0"."tonic_build"}" deps)
      ]);
    };
    features_.audio_server."0.4.0" = deps: f: updateFeatures f (rec {
      alsa."${deps.audio_server."0.4.0".alsa}".default = true;
      audio_server."0.4.0".default = (f.audio_server."0.4.0".default or true);
      env_logger."${deps.audio_server."0.4.0".env_logger}".default = true;
      failure."${deps.audio_server."0.4.0".failure}".default = true;
      failure_derive."${deps.audio_server."0.4.0".failure_derive}".default = true;
      futures = fold recursiveUpdate {} [
        { "${deps.audio_server."0.4.0".futures}"."compat" = true; }
        { "${deps.audio_server."0.4.0".futures}".default = true; }
      ];
      hostname."${deps.audio_server."0.4.0".hostname}".default = true;
      hound."${deps.audio_server."0.4.0".hound}".default = true;
      libc."${deps.audio_server."0.4.0".libc}".default = true;
      log."${deps.audio_server."0.4.0".log}".default = true;
      mio."${deps.audio_server."0.4.0".mio}".default = true;
      nix."${deps.audio_server."0.4.0".nix}".default = true;
      pin_utils."${deps.audio_server."0.4.0".pin_utils}".default = true;
      prost."${deps.audio_server."0.4.0".prost}".default = true;
      prost_types."${deps.audio_server."0.4.0".prost_types}".default = true;
      regex."${deps.audio_server."0.4.0".regex}".default = true;
      serde."${deps.audio_server."0.4.0".serde}".default = true;
      serde_derive."${deps.audio_server."0.4.0".serde_derive}".default = true;
      serde_yaml."${deps.audio_server."0.4.0".serde_yaml}".default = true;
      tokio = fold recursiveUpdate {} [
        { "${deps.audio_server."0.4.0".tokio}"."blocking" = true; }
        { "${deps.audio_server."0.4.0".tokio}"."io-driver" = true; }
        { "${deps.audio_server."0.4.0".tokio}"."macros" = true; }
        { "${deps.audio_server."0.4.0".tokio}"."process" = true; }
        { "${deps.audio_server."0.4.0".tokio}"."rt-core" = true; }
        { "${deps.audio_server."0.4.0".tokio}"."rt-threaded" = true; }
        { "${deps.audio_server."0.4.0".tokio}".default = true; }
      ];
      tonic."${deps.audio_server."0.4.0".tonic}".default = true;
      tonic_build."${deps.audio_server."0.4.0".tonic_build}".default = true;
    }) [
      (features_.alsa."${deps."audio_server"."0.4.0"."alsa"}" deps)
      (cratesIO.features_.env_logger."${deps."audio_server"."0.4.0"."env_logger"}" deps)
      (cratesIO.features_.failure."${deps."audio_server"."0.4.0"."failure"}" deps)
      (cratesIO.features_.failure_derive."${deps."audio_server"."0.4.0"."failure_derive"}" deps)
      (cratesIO.features_.futures."${deps."audio_server"."0.4.0"."futures"}" deps)
      (cratesIO.features_.hostname."${deps."audio_server"."0.4.0"."hostname"}" deps)
      (cratesIO.features_.hound."${deps."audio_server"."0.4.0"."hound"}" deps)
      (cratesIO.features_.libc."${deps."audio_server"."0.4.0"."libc"}" deps)
      (cratesIO.features_.log."${deps."audio_server"."0.4.0"."log"}" deps)
      (cratesIO.features_.mio."${deps."audio_server"."0.4.0"."mio"}" deps)
      (cratesIO.features_.nix."${deps."audio_server"."0.4.0"."nix"}" deps)
      (cratesIO.features_.pin_utils."${deps."audio_server"."0.4.0"."pin_utils"}" deps)
      (cratesIO.features_.prost."${deps."audio_server"."0.4.0"."prost"}" deps)
      (cratesIO.features_.prost_types."${deps."audio_server"."0.4.0"."prost_types"}" deps)
      (cratesIO.features_.regex."${deps."audio_server"."0.4.0"."regex"}" deps)
      (cratesIO.features_.serde."${deps."audio_server"."0.4.0"."serde"}" deps)
      (cratesIO.features_.serde_derive."${deps."audio_server"."0.4.0"."serde_derive"}" deps)
      (cratesIO.features_.serde_yaml."${deps."audio_server"."0.4.0"."serde_yaml"}" deps)
      (cratesIO.features_.tokio."${deps."audio_server"."0.4.0"."tokio"}" deps)
      (cratesIO.features_.tonic."${deps."audio_server"."0.4.0"."tonic"}" deps)
      (cratesIO.features_.tonic_build."${deps."audio_server"."0.4.0"."tonic_build"}" deps)
    ];


# end

  };

  audio_server = crates.crates.audio_server."0.4.0" deps;
  __all = [ (audio_server {}) ];
  deps.addr2line."0.12.2" = {
    gimli = "0.21.0";
  };
  deps.adler32."1.1.0" = {};
  deps.aho_corasick."0.7.13" = {
    memchr = "2.3.3";
  };
  deps.alsa."0.4.1" = {
    alsa_sys = "0.2.0";
    bitflags = "1.2.1";
    libc = "0.2.71";
    nix = "0.15.0";
  };
  deps.alsa_sys."0.2.0" = {
    libc = "0.2.71";
    pkg_config = "0.3.17";
  };
  deps.anyhow."1.0.31" = {};
  deps.arc_swap."0.4.7" = {};
  deps.async_stream."0.2.1" = {
    async_stream_impl = "0.2.1";
    futures_core = "0.3.5";
  };
  deps.async_stream_impl."0.2.1" = {
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    syn = "1.0.33";
  };
  deps.async_trait."0.1.36" = {
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    syn = "1.0.33";
  };
  deps.atty."0.2.14" = {
    hermit_abi = "0.1.14";
    libc = "0.2.71";
    winapi = "0.3.9";
  };
  deps.audio_server."0.4.0" = {
    alsa = "0.4.1";
    env_logger = "0.7.1";
    failure = "0.1.8";
    failure_derive = "0.1.8";
    futures = "0.3.5";
    hostname = "0.3.1";
    hound = "3.4.0";
    libc = "0.2.71";
    log = "0.4.8";
    mio = "0.6.22";
    nix = "0.15.0";
    pin_utils = "0.1.0";
    prost = "0.6.1";
    prost_types = "0.6.1";
    regex = "1.3.9";
    serde = "1.0.114";
    serde_derive = "1.0.114";
    serde_yaml = "0.8.13";
    tokio = "0.2.21";
    tonic = "0.1.1";
    tonic_build = "0.1.1";
  };
  deps.autocfg."1.0.0" = {};
  deps.backtrace."0.3.49" = {
    addr2line = "0.12.2";
    cfg_if = "0.1.10";
    libc = "0.2.71";
    miniz_oxide = "0.3.7";
    object = "0.20.0";
    rustc_demangle = "0.1.16";
  };
  deps.base64."0.10.1" = {
    byteorder = "1.3.4";
  };
  deps.bitflags."1.2.1" = {};
  deps.byteorder."1.3.4" = {};
  deps.bytes."0.5.5" = {
    loom = "0.3.4";
  };
  deps.cc."1.0.56" = {};
  deps.cfg_if."0.1.10" = {};
  deps.dtoa."0.4.6" = {};
  deps.either."1.5.3" = {};
  deps.env_logger."0.7.1" = {
    atty = "0.2.14";
    humantime = "1.3.0";
    log = "0.4.8";
    regex = "1.3.9";
    termcolor = "1.1.0";
  };
  deps.failure."0.1.8" = {
    backtrace = "0.3.49";
    failure_derive = "0.1.8";
  };
  deps.failure_derive."0.1.8" = {
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    syn = "1.0.33";
    synstructure = "0.12.4";
  };
  deps.fixedbitset."0.2.0" = {};
  deps.fnv."1.0.7" = {};
  deps.fuchsia_zircon."0.3.3" = {
    bitflags = "1.2.1";
    fuchsia_zircon_sys = "0.3.3";
  };
  deps.fuchsia_zircon_sys."0.3.3" = {};
  deps.futures."0.1.29" = {};
  deps.futures."0.3.5" = {
    futures_channel = "0.3.5";
    futures_core = "0.3.5";
    futures_executor = "0.3.5";
    futures_io = "0.3.5";
    futures_sink = "0.3.5";
    futures_task = "0.3.5";
    futures_util = "0.3.5";
  };
  deps.futures_channel."0.3.5" = {
    futures_core = "0.3.5";
    futures_sink = "0.3.5";
  };
  deps.futures_core."0.3.5" = {};
  deps.futures_executor."0.3.5" = {
    futures_core = "0.3.5";
    futures_task = "0.3.5";
    futures_util = "0.3.5";
  };
  deps.futures_io."0.3.5" = {};
  deps.futures_macro."0.3.5" = {
    proc_macro_hack = "0.5.16";
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    syn = "1.0.33";
  };
  deps.futures_sink."0.3.5" = {};
  deps.futures_task."0.3.5" = {
    once_cell = "1.4.0";
  };
  deps.futures_util."0.3.5" = {
    futures_channel = "0.3.5";
    futures_core = "0.3.5";
    futures_io = "0.3.5";
    futures_macro = "0.3.5";
    futures_sink = "0.3.5";
    futures_task = "0.3.5";
    memchr = "2.3.3";
    pin_project = "0.4.22";
    pin_utils = "0.1.0";
    proc_macro_hack = "0.5.16";
    proc_macro_nested = "0.1.6";
    slab = "0.4.2";
  };
  deps.generator."0.6.21" = {
    log = "0.4.8";
    cc = "1.0.56";
    rustc_version = "0.2.3";
    libc = "0.2.71";
    winapi = "0.3.9";
  };
  deps.getrandom."0.1.14" = {
    cfg_if = "0.1.10";
    wasi = "0.9.0+wasi-snapshot-preview1";
    libc = "0.2.71";
  };
  deps.gimli."0.21.0" = {};
  deps.h2."0.2.5" = {
    bytes = "0.5.5";
    fnv = "1.0.7";
    futures_core = "0.3.5";
    futures_sink = "0.3.5";
    futures_util = "0.3.5";
    http = "0.2.1";
    indexmap = "1.4.0";
    log = "0.4.8";
    slab = "0.4.2";
    tokio = "0.2.21";
    tokio_util = "0.3.1";
  };
  deps.heck."0.3.1" = {
    unicode_segmentation = "1.6.0";
  };
  deps.hermit_abi."0.1.14" = {
    libc = "0.2.71";
  };
  deps.hostname."0.3.1" = {
    match_cfg = "0.1.0";
    libc = "0.2.71";
    winapi = "0.3.9";
  };
  deps.hound."3.4.0" = {};
  deps.http."0.2.1" = {
    bytes = "0.5.5";
    fnv = "1.0.7";
    itoa = "0.4.6";
  };
  deps.http_body."0.3.1" = {
    bytes = "0.5.5";
    http = "0.2.1";
  };
  deps.httparse."1.3.4" = {};
  deps.humantime."1.3.0" = {
    quick_error = "1.2.3";
  };
  deps.hyper."0.13.6" = {
    bytes = "0.5.5";
    futures_channel = "0.3.5";
    futures_core = "0.3.5";
    futures_util = "0.3.5";
    h2 = "0.2.5";
    http = "0.2.1";
    http_body = "0.3.1";
    httparse = "1.3.4";
    itoa = "0.4.6";
    log = "0.4.8";
    pin_project = "0.4.22";
    socket2 = "0.3.12";
    time = "0.1.43";
    tokio = "0.2.21";
    tower_service = "0.3.0";
    want = "0.3.0";
  };
  deps.indexmap."1.4.0" = {
    autocfg = "1.0.0";
  };
  deps.iovec."0.1.4" = {
    libc = "0.2.71";
  };
  deps.itertools."0.8.2" = {
    either = "1.5.3";
  };
  deps.itoa."0.4.6" = {};
  deps.kernel32_sys."0.2.2" = {
    winapi = "0.2.8";
    winapi_build = "0.1.1";
  };
  deps.lazy_static."1.4.0" = {};
  deps.libc."0.2.71" = {};
  deps.linked_hash_map."0.5.3" = {};
  deps.log."0.4.8" = {
    cfg_if = "0.1.10";
  };
  deps.loom."0.3.4" = {
    cfg_if = "0.1.10";
    generator = "0.6.21";
    scoped_tls = "0.1.2";
  };
  deps.match_cfg."0.1.0" = {};
  deps.memchr."2.3.3" = {};
  deps.miniz_oxide."0.3.7" = {
    adler32 = "1.1.0";
  };
  deps.mio."0.6.22" = {
    cfg_if = "0.1.10";
    iovec = "0.1.4";
    log = "0.4.8";
    net2 = "0.2.34";
    slab = "0.4.2";
    fuchsia_zircon = "0.3.3";
    fuchsia_zircon_sys = "0.3.3";
    libc = "0.2.71";
    kernel32_sys = "0.2.2";
    miow = "0.2.1";
    winapi = "0.2.8";
  };
  deps.mio_named_pipes."0.1.6" = {
    log = "0.4.8";
    mio = "0.6.22";
    miow = "0.3.5";
    winapi = "0.3.9";
  };
  deps.mio_uds."0.6.8" = {
    iovec = "0.1.4";
    libc = "0.2.71";
    mio = "0.6.22";
  };
  deps.miow."0.2.1" = {
    kernel32_sys = "0.2.2";
    net2 = "0.2.34";
    winapi = "0.2.8";
    ws2_32_sys = "0.2.1";
  };
  deps.miow."0.3.5" = {
    socket2 = "0.3.12";
    winapi = "0.3.9";
  };
  deps.multimap."0.8.1" = {};
  deps.net2."0.2.34" = {
    cfg_if = "0.1.10";
    libc = "0.2.71";
    winapi = "0.3.9";
  };
  deps.nix."0.15.0" = {
    bitflags = "1.2.1";
    cfg_if = "0.1.10";
    libc = "0.2.71";
    void = "1.0.2";
  };
  deps.num_cpus."1.13.0" = {
    libc = "0.2.71";
    hermit_abi = "0.1.14";
  };
  deps.object."0.20.0" = {};
  deps.once_cell."1.4.0" = {};
  deps.percent_encoding."1.0.1" = {};
  deps.petgraph."0.5.1" = {
    fixedbitset = "0.2.0";
    indexmap = "1.4.0";
  };
  deps.pin_project."0.4.22" = {
    pin_project_internal = "0.4.22";
  };
  deps.pin_project_internal."0.4.22" = {
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    syn = "1.0.33";
  };
  deps.pin_project_lite."0.1.7" = {};
  deps.pin_utils."0.1.0" = {};
  deps.pkg_config."0.3.17" = {};
  deps.ppv_lite86."0.2.8" = {};
  deps.proc_macro_hack."0.5.16" = {};
  deps.proc_macro_nested."0.1.6" = {};
  deps.proc_macro2."1.0.18" = {
    unicode_xid = "0.2.1";
  };
  deps.prost."0.6.1" = {
    bytes = "0.5.5";
    prost_derive = "0.6.1";
  };
  deps.prost_build."0.6.1" = {
    bytes = "0.5.5";
    heck = "0.3.1";
    itertools = "0.8.2";
    log = "0.4.8";
    multimap = "0.8.1";
    petgraph = "0.5.1";
    prost = "0.6.1";
    prost_types = "0.6.1";
    tempfile = "3.1.0";
    which = "3.1.1";
  };
  deps.prost_derive."0.6.1" = {
    anyhow = "1.0.31";
    itertools = "0.8.2";
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    syn = "1.0.33";
  };
  deps.prost_types."0.6.1" = {
    bytes = "0.5.5";
    prost = "0.6.1";
  };
  deps.quick_error."1.2.3" = {};
  deps.quote."1.0.7" = {
    proc_macro2 = "1.0.18";
  };
  deps.rand."0.7.3" = {
    rand_core = "0.5.1";
    rand_pcg = "0.2.1";
    rand_chacha = "0.2.2";
    rand_hc = "0.2.0";
    libc = "0.2.71";
  };
  deps.rand_chacha."0.2.2" = {
    ppv_lite86 = "0.2.8";
    rand_core = "0.5.1";
  };
  deps.rand_core."0.5.1" = {
    getrandom = "0.1.14";
  };
  deps.rand_hc."0.2.0" = {
    rand_core = "0.5.1";
  };
  deps.rand_pcg."0.2.1" = {
    rand_core = "0.5.1";
  };
  deps.redox_syscall."0.1.56" = {};
  deps.regex."1.3.9" = {
    aho_corasick = "0.7.13";
    memchr = "2.3.3";
    regex_syntax = "0.6.18";
    thread_local = "1.0.1";
  };
  deps.regex_syntax."0.6.18" = {};
  deps.remove_dir_all."0.5.3" = {
    winapi = "0.3.9";
  };
  deps.rustc_demangle."0.1.16" = {};
  deps.rustc_version."0.2.3" = {
    semver = "0.9.0";
  };
  deps.scoped_tls."0.1.2" = {};
  deps.semver."0.9.0" = {
    semver_parser = "0.7.0";
  };
  deps.semver_parser."0.7.0" = {};
  deps.serde."1.0.114" = {};
  deps.serde_derive."1.0.114" = {
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    syn = "1.0.33";
  };
  deps.serde_yaml."0.8.13" = {
    dtoa = "0.4.6";
    linked_hash_map = "0.5.3";
    serde = "1.0.114";
    yaml_rust = "0.4.4";
  };
  deps.signal_hook_registry."1.2.0" = {
    arc_swap = "0.4.7";
    libc = "0.2.71";
  };
  deps.slab."0.4.2" = {};
  deps.socket2."0.3.12" = {
    cfg_if = "0.1.10";
    libc = "0.2.71";
    redox_syscall = "0.1.56";
    winapi = "0.3.9";
  };
  deps.syn."1.0.33" = {
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    unicode_xid = "0.2.1";
  };
  deps.synstructure."0.12.4" = {
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    syn = "1.0.33";
    unicode_xid = "0.2.1";
  };
  deps.tempfile."3.1.0" = {
    cfg_if = "0.1.10";
    rand = "0.7.3";
    remove_dir_all = "0.5.3";
    redox_syscall = "0.1.56";
    libc = "0.2.71";
    winapi = "0.3.9";
  };
  deps.termcolor."1.1.0" = {
    winapi_util = "0.1.5";
  };
  deps.thread_local."1.0.1" = {
    lazy_static = "1.4.0";
  };
  deps.time."0.1.43" = {
    libc = "0.2.71";
    winapi = "0.3.9";
  };
  deps.tokio."0.2.21" = {
    bytes = "0.5.5";
    fnv = "1.0.7";
    futures_core = "0.3.5";
    iovec = "0.1.4";
    lazy_static = "1.4.0";
    memchr = "2.3.3";
    mio = "0.6.22";
    num_cpus = "1.13.0";
    pin_project_lite = "0.1.7";
    slab = "0.4.2";
    tokio_macros = "0.2.5";
    libc = "0.2.71";
    mio_uds = "0.6.8";
    signal_hook_registry = "1.2.0";
    mio_named_pipes = "0.1.6";
    winapi = "0.3.9";
  };
  deps.tokio_macros."0.2.5" = {
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    syn = "1.0.33";
  };
  deps.tokio_util."0.2.0" = {
    bytes = "0.5.5";
    futures_core = "0.3.5";
    futures_sink = "0.3.5";
    log = "0.4.8";
    pin_project_lite = "0.1.7";
    tokio = "0.2.21";
  };
  deps.tokio_util."0.3.1" = {
    bytes = "0.5.5";
    futures_core = "0.3.5";
    futures_sink = "0.3.5";
    log = "0.4.8";
    pin_project_lite = "0.1.7";
    tokio = "0.2.21";
  };
  deps.tonic."0.1.1" = {
    async_stream = "0.2.1";
    async_trait = "0.1.36";
    base64 = "0.10.1";
    bytes = "0.5.5";
    futures_core = "0.3.5";
    futures_util = "0.3.5";
    http = "0.2.1";
    http_body = "0.3.1";
    hyper = "0.13.6";
    percent_encoding = "1.0.1";
    pin_project = "0.4.22";
    prost = "0.6.1";
    prost_derive = "0.6.1";
    tokio = "0.2.21";
    tokio_util = "0.2.0";
    tower = "0.3.1";
    tower_balance = "0.3.0";
    tower_load = "0.3.0";
    tower_make = "0.3.0";
    tower_service = "0.3.0";
    tracing = "0.1.15";
    tracing_futures = "0.2.4";
  };
  deps.tonic_build."0.1.1" = {
    proc_macro2 = "1.0.18";
    prost_build = "0.6.1";
    quote = "1.0.7";
    syn = "1.0.33";
  };
  deps.tower."0.3.1" = {
    futures_core = "0.3.5";
    tower_buffer = "0.3.0";
    tower_discover = "0.3.0";
    tower_layer = "0.3.0";
    tower_limit = "0.3.1";
    tower_load_shed = "0.3.0";
    tower_retry = "0.3.0";
    tower_service = "0.3.0";
    tower_timeout = "0.3.0";
    tower_util = "0.3.1";
  };
  deps.tower_balance."0.3.0" = {
    futures_core = "0.3.5";
    futures_util = "0.3.5";
    indexmap = "1.4.0";
    pin_project = "0.4.22";
    rand = "0.7.3";
    slab = "0.4.2";
    tokio = "0.2.21";
    tower_discover = "0.3.0";
    tower_layer = "0.3.0";
    tower_load = "0.3.0";
    tower_make = "0.3.0";
    tower_ready_cache = "0.3.1";
    tower_service = "0.3.0";
    tracing = "0.1.15";
  };
  deps.tower_buffer."0.3.0" = {
    futures_core = "0.3.5";
    pin_project = "0.4.22";
    tokio = "0.2.21";
    tower_layer = "0.3.0";
    tower_service = "0.3.0";
    tracing = "0.1.15";
  };
  deps.tower_discover."0.3.0" = {
    futures_core = "0.3.5";
    pin_project = "0.4.22";
    tower_service = "0.3.0";
  };
  deps.tower_layer."0.3.0" = {};
  deps.tower_limit."0.3.1" = {
    futures_core = "0.3.5";
    pin_project = "0.4.22";
    tokio = "0.2.21";
    tower_layer = "0.3.0";
    tower_load = "0.3.0";
    tower_service = "0.3.0";
  };
  deps.tower_load."0.3.0" = {
    futures_core = "0.3.5";
    log = "0.4.8";
    pin_project = "0.4.22";
    tokio = "0.2.21";
    tower_discover = "0.3.0";
    tower_service = "0.3.0";
  };
  deps.tower_load_shed."0.3.0" = {
    futures_core = "0.3.5";
    pin_project = "0.4.22";
    tower_layer = "0.3.0";
    tower_service = "0.3.0";
  };
  deps.tower_make."0.3.0" = {
    tokio = "0.2.21";
    tower_service = "0.3.0";
  };
  deps.tower_ready_cache."0.3.1" = {
    futures_core = "0.3.5";
    futures_util = "0.3.5";
    indexmap = "1.4.0";
    log = "0.4.8";
    tokio = "0.2.21";
    tower_service = "0.3.0";
  };
  deps.tower_retry."0.3.0" = {
    futures_core = "0.3.5";
    pin_project = "0.4.22";
    tokio = "0.2.21";
    tower_layer = "0.3.0";
    tower_service = "0.3.0";
  };
  deps.tower_service."0.3.0" = {};
  deps.tower_timeout."0.3.0" = {
    pin_project = "0.4.22";
    tokio = "0.2.21";
    tower_layer = "0.3.0";
    tower_service = "0.3.0";
  };
  deps.tower_util."0.3.1" = {
    futures_core = "0.3.5";
    futures_util = "0.3.5";
    pin_project = "0.4.22";
    tower_service = "0.3.0";
  };
  deps.tracing."0.1.15" = {
    cfg_if = "0.1.10";
    log = "0.4.8";
    tracing_attributes = "0.1.8";
    tracing_core = "0.1.10";
  };
  deps.tracing_attributes."0.1.8" = {
    proc_macro2 = "1.0.18";
    quote = "1.0.7";
    syn = "1.0.33";
  };
  deps.tracing_core."0.1.10" = {
    lazy_static = "1.4.0";
  };
  deps.tracing_futures."0.2.4" = {
    pin_project = "0.4.22";
    tracing = "0.1.15";
  };
  deps.try_lock."0.2.2" = {};
  deps.unicode_segmentation."1.6.0" = {};
  deps.unicode_xid."0.2.1" = {};
  deps.void."1.0.2" = {};
  deps.want."0.3.0" = {
    log = "0.4.8";
    try_lock = "0.2.2";
  };
  deps.wasi."0.9.0+wasi-snapshot-preview1" = {};
  deps.which."3.1.1" = {
    libc = "0.2.71";
  };
  deps.winapi."0.2.8" = {};
  deps.winapi."0.3.9" = {
    winapi_i686_pc_windows_gnu = "0.4.0";
    winapi_x86_64_pc_windows_gnu = "0.4.0";
  };
  deps.winapi_build."0.1.1" = {};
  deps.winapi_i686_pc_windows_gnu."0.4.0" = {};
  deps.winapi_util."0.1.5" = {
    winapi = "0.3.9";
  };
  deps.winapi_x86_64_pc_windows_gnu."0.4.0" = {};
  deps.ws2_32_sys."0.2.1" = {
    winapi = "0.2.8";
    winapi_build = "0.1.1";
  };
  deps.yaml_rust."0.4.4" = {
    linked_hash_map = "0.5.3";
  };
}
